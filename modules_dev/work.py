import disnake
from disnake.ext import commands

from utils.client import BotCore as Client
from utils.GenEMBED import Embed
from utils.music.checks import can_send_message, can_send_message_check
import random


reasonList = [
    "B·∫°n v·ª´a ƒëi gi·∫≠t t√∫i c·ªßa ng∆∞·ªùi kh√°c ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n ƒëi ƒÉn xin ƒë∆∞·ª£c b·ªë th√≠ {money} Mora!",
    "B·∫°n ƒëi ph·ª•c v·ª• h·ªôp ƒë√™m ƒë∆∞·ª£c tip {money} Mora!",
    "B·∫°n ƒëang ƒëi tr√™n ƒë∆∞·ªùng th√¨ nh·∫∑t ƒë∆∞·ª£c {money} Mora. B·∫°n ƒë√£ quy·∫øt ƒë·ªãnh t·∫°m th·ªùi b·ªè t√∫i lu√¥n!",
    "B·∫°n v·ª´a ƒë√≤i n·ª£ th·∫±ng b·∫°n v√† l·∫•y ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a ƒëi ƒë√°nh ƒë·ªÅ v√† th·∫Øng ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n l√†m bartender ƒëi l·∫Øc n∆∞·ªõc ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n t·∫°o k√™nh youtube ƒë∆∞·ª£c donate {money} Mora!",
    "B·∫°n ƒëi ƒÉn t·∫øt th√¨ ƒë∆∞·ª£c {nguoithan} l√¨ x√¨ cho {money} Mora!",
    "B·∫°n v·ª´a nh·∫≠n l∆∞∆°ng th√°ng v√† ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n ƒëi l√†m th√™m v√† ki·∫øm ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a b√°n ƒë∆∞·ª£c m·ªôt m√≥n ƒë·ªì v√† thu ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a nh·∫≠n ti·ªÅn th∆∞·ªüng v√† ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a tr√∫ng s·ªë v√† nh·∫≠n ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a b√°n ƒë∆∞·ª£c m·ªôt m√≥n ƒë·ªì qu√Ω hi·∫øm v√† thu ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a ho√†n th√†nh m·ªôt nhi·ªám v·ª• v√† nh·∫≠n ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a b√°n ƒë∆∞·ª£c m·ªôt m√≥n ƒë·ªì v√† ki·∫øm ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c qu√† t·∫∑ng v√† ƒë∆∞·ª£c {money} Mora!",
    "B·∫°n v·ª´a nh·∫≠n ƒë∆∞·ª£c ti·ªÅn th∆∞·ªüng v√† ki·∫øm ƒë∆∞·ª£c {money} Mora!"
]

subtractReasonList = [
    "B·∫°n ƒëang ƒë·ª©ng ƒë∆∞·ªùng th√¨ b·ªã c√¥ng an b·∫Øt v√† b·ªã ph·∫°t {money} Mora.",
    "Sau khi b·∫°n ph·ª•c v·ª• th√¨ b·ªã kh√°ch qu·ªµt m·∫•t {money} Mora.",
    "B·∫°n v·ª´a ph√°t hi·ªán kh√°ch b·∫°n b·ªã HIV, ƒëi ch·ªØa m·∫•t {money} Mora.",
    "ƒêang ph·ª•c v·ª• th√¨ b·ªã ƒë∆∞a ƒëi c√°ch ly b·∫Øt bu·ªôc, t·ªën m·∫•t {money} Mora.",
    "B·∫°n sau khi l√†m xong th√¨ b·ªã nh√† ngh·ªâ ch√©m gi√°, l·ªó m·∫•t {money} Mora.",
    "ƒêang ƒë√°nh b√†i th√¨ c√¥ng an ·∫≠p v√¥ t√≥m, l·ªó m·∫•t {money} Mora.",
    "B·∫°n v·ª´a b·ªã tr·ªôm c·∫Øp v√† m·∫•t ƒëi {money} Mora.",
    "B·∫°n v·ª´a mua m·ªôt m√≥n ƒë·ªì ƒë·∫Øt ti·ªÅn v√† b·ªã tr·ª´ ƒëi {money} Mora.",
    "B·∫°n v·ª´a b·ªã l·ª´a ƒë·∫£o v√† m·∫•t ƒëi {money} Mora.",
    "B·∫°n v·ª´a ƒë·∫∑t c∆∞·ª£c v√† thua {money} Mora.",
    "B·∫°n v·ª´a mua m·ªôt m√≥n ƒë·ªì gi·∫£ m·∫°o v√† b·ªã tr·ª´ ƒëi {money} Mora.",
    "B·∫°n v·ª´a b·ªã ph·∫°t v√¨ vi ph·∫°m lu·∫≠t v√† m·∫•t ƒëi {money} Mora.",
    "B·∫°n v·ª´a b·ªã tr·ª´ ti·ªÅn ph·∫°t v√¨ qu√™n tr·∫£ s√°ch v√† m·∫•t ƒëi {money} Mora.",
    "B·∫°n v·ª´a mua m·ªôt m√≥n ƒë·ªì kh√¥ng h·ª£p ph√°p v√† b·ªã ph·∫°t {money} Mora.",
    "B·∫°n v·ª´a b·ªã tr·ª´ ti·ªÅn ph·∫°t v√¨ qu√™n tr·∫£ ph√≠ g·ª≠i xe v√† m·∫•t ƒëi {money} Mora."
]


async def check_user(bot, ctx, uid, premium_check = False):
        userinfo = await bot.db_handler.get_userinfo(uid)
        if userinfo["status"] == "banned":
            await ctx.send(embed=Embed.gen_banned_embed(userinfo["time"], userinfo["ban_reason"]))
            return False
        if userinfo["status"] == "notfound":
            await ctx.send(embed=Embed.gen_nouser_embed(message="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng.\nH√£y s·ª≠ d·ª•ng l·ªánh `/register` ƒë·ªÉ ƒëƒÉng k√Ω."))
            return False
        if userinfo["status"] == "success":
            premium = userinfo["premium"] > int(disnake.utils.utcnow().timestamp())
            if premium_check and not premium:
                await ctx.send(embed=Embed.gen_error_embed("T√≠nh nƒÉng n√†y ch·ªâ d√†nh cho ng∆∞·ªùi d√πng Premium."))
                return False
            return {"status": "success", "premium": premium}

class Work(commands.Cog):

    emoji = "üéÆ"
    name = "Minigame"
    desc_prefix = f"[{emoji} {name}] | "

    def __init__(self, bot: Client):
        self.bot = bot

    
    @can_send_message_check()
    @commands.cooldown(1, 300, commands.BucketType.user)
    @commands.command(description=f"{desc_prefix}Ki·∫øm ti·ªÅn!")
    async def work(self, ctx: disnake.AppCommandInteraction):
        random_tien = random.randint(500, 1000)
        user_info = await check_user(self.bot, ctx, ctx.author.id)
        if not user_info: return
        reason = random.choice(reasonList).replace('{money}', "<:m1_mora:1169483093233631304> " + f"{random_tien}")

        if "{nguoithan}" in reason:
            nguoithan = ["C√¥", "D√¨", "Ch√∫", "B√°c", "√îng", "B√†", "B·ªë", "M·∫π"]
            rand_nguoithan = random.choice(nguoithan)
            reason = reason.replace("{nguoithan}", rand_nguoithan)

        await self.bot.db_handler.transaction(ctx.author.id, random_tien, 0, reason=reason)

        await ctx.channel.send(reason)

    @can_send_message_check()
    @commands.cooldown(1, 300, commands.BucketType.user)
    @commands.command(description=f"{desc_prefix}Ki·∫øm ti·ªÅn nhi·ªÅu h∆°n l·ªánh `work` nh∆∞ng s·∫Ω c√≥ t·ªâ l·ªá thua")
    async def slut(self, ctx: disnake.AppCommandInteraction):
        random_tien = random.randint(4000, 10000)
        user_info = await check_user(self.bot, ctx, ctx.author.id)
        if not user_info: return
        user_money = await self.bot.db_handler.get_userinfo(ctx.author.id)
        if user_money["coin"]==0:
            await ctx.channel.send(f"B·∫°n h·∫øt ti·ªÅn r")
            return
        status = random.randint(0, 1)
        if status == 1:
            await self.bot.db_handler.transaction(ctx.author.id, random_tien, 0, reason="Nh·∫≠n ti·ªÅn t·ª´ vi·ªác ch∆°i game")
            await ctx.channel.send(f"B·∫°n ƒë√£ nh·∫≠n ƒë∆∞·ª£c <:m1_mora:1169483093233631304> {random_tien} mora.")
        else:
            _random_tien = random.randint(2000, 500)
            if user_money["coin"] < _random_tien: 
                _random_tien == user_money["coin"]
            _reason = random.choice(subtractReasonList).replace('{money}', "<:m1_mora:1169483093233631304> " + f"{_random_tien}")
            await self.bot.db_handler.transaction(ctx.author.id, 
                                                        0 - _random_tien, 
                                                        0, 
                                                            reason=_reason)
            await ctx.channel.send(_reason)


def setup(bot: Client):
    bot.add_cog(Work(bot))



        
